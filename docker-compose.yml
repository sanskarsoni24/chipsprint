version: "3.8"
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: chipsprint
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    restart: always
    ports:
      - "6379:6379"

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio_data:/data

  backend:
    build: ./backend
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/chipsprint
      AWS_ACCESS_KEY: minioadmin
      AWS_SECRET_KEY: minioadmin
      AWS_S3_BUCKET: chipsprint-bucket
      S3_ENDPOINT: http://minio:9000
      SLACK_WEBHOOK_URL:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: supersecret
    depends_on:
      - db
      - minio
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app

  celery:
    build: ./backend
    command: celery -A app.tasks.celery_app worker --loglevel=info
    environment:
      DATABASE_URL: postgresql+psycopg2://postgres:postgres@db:5432/chipsprint
      AWS_ACCESS_KEY: minioadmin
      AWS_SECRET_KEY: minioadmin
      AWS_S3_BUCKET: chipsprint-bucket
      S3_ENDPOINT: http://minio:9000
      SLACK_WEBHOOK_URL:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: supersecret
    depends_on:
      - db
      - minio
      - redis
    volumes:
      - ./backend:/app

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  db_data:
  minio_data: